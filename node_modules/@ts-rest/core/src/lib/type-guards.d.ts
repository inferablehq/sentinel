import { AppRoute } from './dsl';
import { ClientInferResponses, InferResponseUndefinedStatusCodes } from './infer-types';
import { ErrorHttpStatusCode, HTTPStatusCode, SuccessfulHttpStatusCode } from './status-codes';
export declare const isResponse: <T extends AppRoute>(response: unknown, contractEndpoint?: T | undefined) => response is ClientInferResponses<T, HTTPStatusCode>;
export declare const isSuccessResponse: <T extends AppRoute>(response: unknown, contractEndpoint?: T | undefined) => response is ClientInferResponses<T, SuccessfulHttpStatusCode>;
export declare const isErrorResponse: <T extends AppRoute>(response: unknown, contractEndpoint?: T | undefined) => response is ClientInferResponses<T, ErrorHttpStatusCode>;
export declare const isUnknownResponse: <T extends AppRoute>(response: unknown, contractEndpoint: T) => response is ClientInferResponses<T, InferResponseUndefinedStatusCodes<T>, "ignore">;
export declare const isUnknownSuccessResponse: <T extends AppRoute>(response: unknown, contractEndpoint: T) => response is ClientInferResponses<T, InferResponseUndefinedStatusCodes<T, SuccessfulHttpStatusCode>, "ignore">;
export declare const isUnknownErrorResponse: <T extends AppRoute>(response: unknown, contractEndpoint: T) => response is ClientInferResponses<T, InferResponseUndefinedStatusCodes<T, ErrorHttpStatusCode>, "ignore">;
export declare const exhaustiveGuard: <T extends {
    status: never;
}>(response: T) => never;
